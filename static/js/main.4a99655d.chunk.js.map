{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","style","color","name","id","getAll","fetch","then","response","json","get5First","newGoods","sort","a","b","localeCompare","length","getRedGoods","filter","App","useState","setGoods","handleClick","useCallback","getFunction","gods","Button","type","variant","onClick","ReactDOM","render","document","getElementById"],"mappings":"uOAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,oBAAIC,UAAU,YAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAH1B,SAKGF,EAAKG,MAJDH,EAAKI,U,OCNX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAV,GACJ,IAAMc,EAAW,YAAId,GAAOe,MAC1B,SAACC,EAAGC,GAAJ,OAAUD,EAAEV,KAAKY,cAAcD,EAAEX,SAKnC,OAFAQ,EAASK,OAAS,EAEXL,MAIAM,EAAc,WACzB,OAAOZ,IACJE,MAAK,SAAAV,GAAK,OAAIA,EAAMqB,QAAO,SAAAlB,GAAI,MAAmB,QAAfA,EAAKE,aClBhCiB,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOvB,EAAP,KAAcwB,EAAd,KAEMC,EAAcC,uBAAY,SAACC,GAC/BA,IAAcjB,MAAK,SAACkB,GAAD,OAAkBJ,EAASI,QAC7C,IAEH,OACE,sBAAK3B,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,mCAEA,cAAC4B,EAAA,EAAD,CACEC,KAAK,SACL7B,UAAU,SACV,UAAQ,aACR8B,QAAQ,WACRC,QAAS,kBAAMP,EAAYjB,IAL7B,4BAUA,cAACqB,EAAA,EAAD,CACEC,KAAK,SACL7B,UAAU,SACV,UAAQ,oBACR8B,QAAQ,WACRC,QAAS,kBAAMP,EAAYZ,IAL7B,gCAUA,cAACgB,EAAA,EAAD,CACEC,KAAK,SACL7B,UAAU,SACV,UAAQ,aACR8B,QAAQ,WACRC,QAAS,kBAAMP,EAAYL,IAL7B,4BAUA,cAAC,EAAD,CAAWpB,MAAOA,QC7CxBiC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4a99655d.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul className=\"goodsList\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: `${good.color}` }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      const newGoods = [...goods].sort(\n        (a, b) => a.name.localeCompare(b.name),\n      );\n\n      newGoods.length = 5;\n\n      return newGoods;\n    });\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { Button } from '@mui/material';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const handleClick = useCallback((getFunction) => {\n    getFunction().then((gods: Good[]) => setGoods(gods));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"appTitle\">Dynamic list of Goods</h1>\n\n      <Button\n        type=\"button\"\n        className=\"button\"\n        data-cy=\"all-button\"\n        variant=\"outlined\"\n        onClick={() => handleClick(getAll)}\n      >\n        Load all goods\n      </Button>\n\n      <Button\n        type=\"button\"\n        className=\"button\"\n        data-cy=\"first-five-button\"\n        variant=\"outlined\"\n        onClick={() => handleClick(get5First)}\n      >\n        Load 5 first goods\n      </Button>\n\n      <Button\n        type=\"button\"\n        className=\"button\"\n        data-cy=\"red-button\"\n        variant=\"outlined\"\n        onClick={() => handleClick(getRedGoods)}\n      >\n        Load red goods\n      </Button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}